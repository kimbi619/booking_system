# Generated by Django 4.2.15 on 2024-09-03 11:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seats', models.IntegerField(verbose_name='number of seats booked')),
                ('booking_time', models.DateTimeField(auto_now_add=True, verbose_name='when the booking was made')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='created', max_length=10, verbose_name='current status of the booking (pending, confirmed, cancelled)')),
                ('is_round_trip', models.BooleanField(default=False, verbose_name='indicates if this is part of a round trip')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='indicates if this booking is safe delete or not')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='URL-friendly name')),
                ('service_type', models.CharField(choices=[('vip', 'VIP'), ('standard', 'Standard')], default='standard', max_length=10, verbose_name='service type of the booking')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-booking_time'],
            },
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=20, unique=True, verbose_name='unique identifier for the bus')),
                ('is_active', models.BooleanField(default=True, verbose_name='indicates if the bus is currently in service')),
                ('maintenance_status', models.CharField(choices=[('operational', 'Operational'), ('maintenance', 'Under Maintenance'), ('repair', 'Needs Repair')], default='operational', verbose_name='determines the status of the bus if in maintainance')),
            ],
            options={
                'verbose_name': 'Bus',
                'verbose_name_plural': 'Buses',
                'ordering': ['registration_number'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name of the city')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='URL-friendly name')),
                ('is_active', models.BooleanField(default=True, verbose_name='indicates if the city is currently active')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='unique discount code')),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='discount percentage')),
                ('start_date', models.DateTimeField(verbose_name='start date of the discount code')),
                ('end_date', models.DateTimeField(verbose_name='end date of the discount code')),
                ('is_active', models.BooleanField(default=True, verbose_name='indicates if the discount is currently usable')),
            ],
            options={
                'verbose_name': 'Discount',
                'verbose_name_plural': 'Discounts',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name of the payment method')),
                ('is_active', models.BooleanField(default=True, verbose_name='indicates if the payment method is currently available')),
                ('client_id', models.CharField(max_length=100, verbose_name='client ID for the payment provider')),
                ('client_secret', models.CharField(max_length=100, verbose_name='client secret for the payment provider')),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='distance of the route in kilometers')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='standard price for this route')),
                ('vip_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='standard price for this route')),
                ('is_active', models.BooleanField(default=True, verbose_name='indicates if the route is currently offered')),
                ('destination', models.ForeignKey(help_text=' endpoint of the route', on_delete=django.db.models.deletion.CASCADE, related_name='routes_as_destination', to='bookingApp.city')),
                ('origin', models.ForeignKey(help_text='starting point of the route', on_delete=django.db.models.deletion.CASCADE, related_name='routes_as_origin', to='bookingApp.city')),
            ],
            options={
                'verbose_name': 'Route',
                'verbose_name_plural': 'Routes',
                'ordering': ['origin__name', 'destination__name'],
                'unique_together': {('origin', 'destination')},
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_time', models.TimeField(verbose_name='time of departure')),
                ('arrival_time', models.TimeField(verbose_name='time of arrival')),
                ('time_of_day', models.CharField(choices=[('morning', 'Morning'), ('evening', 'Evening')], max_length=10, verbose_name='morning or evening trip')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='When this trip was created')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Last update to this field')),
                ('created_by', models.CharField(blank=True, max_length=255, null=True, verbose_name='The user who created this Trip')),
                ('updateded_by', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last user to update this Trip')),
                ('available_seats', models.IntegerField(blank=True, null=True, verbose_name='number of seats available for booking')),
                ('is_active', models.BooleanField(default=True, verbose_name='indicates if the trip is currently bookable')),
                ('bus', models.ForeignKey(help_text='the bus assigned to this trip', on_delete=django.db.models.deletion.CASCADE, to='bookingApp.bus')),
                ('route', models.ForeignKey(help_text=' the route of this trip', on_delete=django.db.models.deletion.CASCADE, to='bookingApp.route')),
            ],
            options={
                'verbose_name': 'Trip',
                'verbose_name_plural': 'Trips',
                'ordering': ['departure_time'],
            },
        ),
        migrations.CreateModel(
            name='SMSNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='content of the SMS')),
                ('sent_time', models.DateTimeField(auto_now_add=True, verbose_name='when the SMS was sent')),
                ('is_sent', models.BooleanField(default=False, verbose_name='indicates if the SMS was successfully sent')),
                ('recipient', models.ForeignKey(help_text='the user receiving the SMS', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='rating of the trip (1 to 5)')),
                ('comment', models.TextField(verbose_name='optional comment about the trip')),
                ('review_time', models.DateTimeField(auto_now_add=True, verbose_name='when the review was made')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookingApp.trip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-review_time'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name of the region')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='URL-friendly name')),
                ('is_active', models.BooleanField(default=True, verbose_name='indicates if the region is currently active')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['slug'], name='bookingApp__slug_93fc6d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='discount percentage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='amount paid')),
                ('provider', models.CharField(choices=[('mtn', 'MTN Mobile Money'), ('orange', 'Orange Money')], max_length=10, verbose_name='payment provider (MTN or Orange)')),
                ('transaction_id', models.CharField(max_length=100, unique=True, verbose_name='unique identifier for the transaction')),
                ('payer_name', models.CharField(max_length=100, verbose_name='name of the person who made the payment')),
                ('payer_phone', models.CharField(max_length=20, verbose_name=' phone number used for payment')),
                ('payment_time', models.DateTimeField(auto_now_add=True, verbose_name='when the payment was made')),
                ('is_refunded', models.BooleanField(default=False, verbose_name='indicates if the payment has been refunded')),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bookingApp.booking')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_time'],
            },
        ),
        migrations.CreateModel(
            name='CustomerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification', models.CharField(max_length=50, unique=True, verbose_name='ID card number or passport')),
                ('phone_number', models.CharField(max_length=15)),
                ('username', models.CharField(max_length=150)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer Information',
                'verbose_name_plural': 'Customer Information',
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name of the person sending the message')),
                ('email', models.EmailField(max_length=254, verbose_name='email address of the person sending the message')),
                ('message', models.TextField(verbose_name='content of the message')),
                ('sent_time', models.DateTimeField(auto_now_add=True, verbose_name='when the message was sent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-sent_time'],
            },
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(help_text='the region this city belongs to', on_delete=django.db.models.deletion.CASCADE, to='bookingApp.region'),
        ),
        migrations.CreateModel(
            name='BusType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name of the bus type')),
                ('capacity', models.IntegerField(verbose_name='seating capacity of this bus type')),
            ],
            options={
                'verbose_name': 'Bus Type',
                'verbose_name_plural': 'Bus Types',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='bookingApp__name_7deb41_idx')],
            },
        ),
        migrations.AddField(
            model_name='bus',
            name='bus_type',
            field=models.ForeignKey(help_text='the type of this bus', on_delete=django.db.models.deletion.CASCADE, to='bookingApp.bustype'),
        ),
        migrations.AddField(
            model_name='booking',
            name='customer_info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookingApp.customerinfo'),
        ),
        migrations.AddField(
            model_name='booking',
            name='return_trip',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookingApp.booking'),
        ),
        migrations.AddField(
            model_name='booking',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookingApp.trip'),
        ),
        migrations.AddIndex(
            model_name='city',
            index=models.Index(fields=['slug'], name='bookingApp__slug_d69170_idx'),
        ),
        migrations.AddIndex(
            model_name='city',
            index=models.Index(fields=['region'], name='bookingApp__region__66f5eb_idx'),
        ),
    ]
