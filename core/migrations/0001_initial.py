# Generated by Django 4.2.15 on 2024-09-01 01:46

import core.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Optional. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, help_text="User's first name", max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, help_text="User's last name", max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, help_text="User's email address (optional)", max_length=254, null=True, verbose_name='email address')),
                ('id_number', models.CharField(blank=True, help_text='User ID card or passport number', max_length=22, null=True, unique=True)),
                ('date_of_birth', models.DateField(blank=True, help_text="User's date of birth", null=True)),
                ('avatar', models.ImageField(blank=True, help_text="User's profile picture", null=True, upload_to='avatars')),
                ('phone', models.CharField(help_text="User's primary phone number", max_length=20, unique=True, verbose_name='Mobile contact number')),
                ('phone_verified', models.BooleanField(default=False, help_text="Indicates whether the user's phone number has been verified", verbose_name='phone verified')),
                ('phone_verification_code', models.CharField(blank=True, help_text='Verification code for phone number', max_length=6, null=True, unique=True)),
                ('address', models.CharField(blank=True, help_text="User's primary residential address", max_length=256, null=True, verbose_name='Residential address')),
                ('bio', models.TextField(blank=True, help_text='A brief description about the user', max_length=500, null=True, verbose_name='Biography')),
                ('address_alt', models.CharField(blank=True, help_text="User's secondary address", max_length=256, null=True, verbose_name='Alternative address')),
                ('default_language', models.CharField(blank=True, help_text="User's preferred language for the interface", max_length=50, null=True, verbose_name='Preferred language')),
                ('secondary_language', models.CharField(blank=True, help_text="User's secondary language preference", max_length=50, null=True, verbose_name='Secondary language')),
                ('profile', models.JSONField(blank=True, help_text='JSON field detailing the profile settings of the user', null=True, verbose_name='coverage')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_married', models.BooleanField(default=False, help_text='Indicates whether the user is married.', verbose_name='Is Married')),
                ('has_children', models.BooleanField(default=False, help_text='Indicates whether the user has children.', verbose_name='Has Children')),
                ('number_of_children', models.IntegerField(default=0, help_text='Number of children the user has.', verbose_name='Number of Children')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when the user joined the platform', verbose_name='date joined')),
                ('email_verified', models.BooleanField(default=False, help_text="Indicates whether the user's email address has been verified", verbose_name='email verified')),
                ('gender', models.CharField(blank=True, help_text="User's gender (optional)", max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', core.models.customUserManager()),
            ],
        ),
    ]
